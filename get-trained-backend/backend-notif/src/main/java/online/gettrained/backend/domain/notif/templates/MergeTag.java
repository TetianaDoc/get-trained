package online.gettrained.backend.domain.notif.templates;

import static online.gettrained.backend.utils.CommonUtils.immutableSetOf;

import online.gettrained.backend.domain.notif.NotificationEvent.Code;
import java.util.Set;

/**
 * Merge tags
 */
public enum MergeTag {
  /* This is a system tag that must be included in all events */
  EMAIL("email",
      "be_text.merge_tag_email",
      "The User Email",
      immutableSetOf()),

  /* This is a tag that included in a view template */
  COMPANY_LOGO("companyLogo",
      "be_text.merge_tag_company_logo",
      "The Company Logo",
      immutableSetOf()),

  /* This is a tag that included in a view template */
  TITLE("title",
      "be_text.merge_tag_title",
      "The Title",
      immutableSetOf()),

  /* This is a tag that included in a view template */
  BODY("body",
      "be_text.merge_tag_body",
      "The Body",
      immutableSetOf()),

  /* This is a tag that included in a view template */
  FOOTER("footer",
      "be_text.merge_tag_footer",
      "The Footer",
      immutableSetOf()),

  FIRST_NAME("firstName",
      "be_text.merge_tag_first_name",
      "The User First Name",
      immutableSetOf(
          Code.CONFIRM_REGISTRATION, Code.SUCCESS_REGISTRATION, Code.RESTORE_PASSWORD
      )
  ),

  LAST_NAME("lastName",
      "be_text.merge_tag_last_name",
      "The User Last Name",
      immutableSetOf()),

  HOME_URL("HOME_URL",
      "be_text.merge_tag_home_url",
      "The System Home URL",
      immutableSetOf(Code.CONFIRM_REGISTRATION, Code.SUCCESS_REGISTRATION, Code.RESTORE_PASSWORD)),

  URL("URL",
      "be_text.merge_tag_url",
      "The URL",
      immutableSetOf(Code.CONFIRM_REGISTRATION)),

  AUTO_GENERATED_PASSWORD("autoGeneratedPassword",
      "be_text.merge_tag_auto_gen_password",
      "The Random Password",
      immutableSetOf(Code.RESTORE_PASSWORD)),

  ADMIN_SYSTEM_METRICS("systemMetrics",
      "be_text.merge_tag_system_metrics",
      "The System Metrics",
      immutableSetOf(Code.ADMIN_SYSTEM_METRICS));

  MergeTag(String value, String localKey, String defaultLocalValue, Set<Code> events) {
    this.value = value;
    this.localKey = localKey;
    this.defaultLocalValue = defaultLocalValue;
    this.events = events;
  }

  private final String value;
  private final String localKey;
  private final String defaultLocalValue;
  private final Set<Code> events;

  public String getValue() {
    return value;
  }

  public String getLocalKey() {
    return localKey;
  }

  public String getDefaultLocalValue() {
    return defaultLocalValue;
  }

  public boolean relevantToEvent(Code event) {
    return events.contains(event);
  }

  public String getTag() {
    return "${" + value + "}";
  }

  @Override
  public String toString() {
    return value;
  }
}
